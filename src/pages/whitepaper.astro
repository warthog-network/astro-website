---
import BaseLayout from "../layouts/BaseLayout.astro";
import Whitepaperimg from "../images/whitepaperimg1.png";
import Main from '../BalkyImages/main-01.png'
const title ="Warthog Network"
---

<style>
    h3 {
        font-size: 1.3rem;
        font-weight: bold;
        color: gold;
    }
    h2 {
        font-weight: bold;
        color: gold;
        font-size: 2rem;
        font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande",
            "Lucida Sans Unicode", Geneva, Verdana, sans-serif;
        border-radius: 0.3rem;
        padding: 1rem;
    }
    h1 {
        font-size: 2.5rem;
        font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande",
            "Lucida Sans Unicode", Geneva, Verdana, sans-serif;
        border-radius: 0.3rem;
        padding: 1rem;
    }
    .App {
        padding: 1rem;
    }
    .newsApp {
        background-color: rgb(243, 237, 237);
    }
    .shadow {
        padding: 2rem;
        background-color: rgb(255, 255, 255);
    }
    .center {
        display: flex;
        flex-direction: column;
        align-items: center;
    }
    p {
        font-size: 1.1rem;
        margin-top: 2rem;
    }
    th {
        padding: 0.5rem;
    }
    td {
        padding: 0.5rem;
        outline: 0.5px solid black;
    }
    li {
        margin-left: 2rem;
    }
    .ToC{
        display: flex;
        flex-direction: column;
        text-align: right;
    }
    .ToC2{
        display: none;
        flex-direction: column;
        text-align: right;
        display: hidden;
    }
    @media (max-width: 1024px) {
        .ToC2{
            font-size: .9rem;
        display: flex;
        flex-direction: column;
        text-align: center;
    }
        .ToC{
        font-size: .75rem;
        display: none;
        flex-direction: column;
        text-align: left;
    }
    }
    .WhitepaperCover{
        width: 100%;
        max-width: 60rem;
        padding: 1rem;
        margin-bottom: 2rem;
        border-bottom-width: 5px;
    }
    .projectlinks > li >a{
        color: rgb(221, 188, 2);
    }
    .Bibliography > p > a{
        color: rgb(221, 188, 2);

    }
</style>
<BaseLayout>
  <object class="min-h-screen w-full" data="public/whitepaper.pdf" type="application/pdf">
    {/* Fallback: use Google viewer if no embedded PDF viewer in browser.
     This is relevant for example for Chrome on Android.*/}
  <div class="flex flex-col h-full w-full">
<iframe class="flex-grow" src="https://docs.google.com/gview?url=https://github.com/warthog-network/whitepaper/releases/download/build/main.pdf&embedded=true"></iframe>
  </div>
  </object>

  <>
{/* old content
    
    <!-- <div class="newsApp"> -->
        <!-- <div class="App"> -->
        <!--     <div class="shadow "> -->
        <!--          -->
        <!--         <div class=" center"> -->
        <!--             <img class="WhitepaperCover shadow " src={Main.src}/> -->
        <!--             <div class="ToC"> -->
        <!--         <a href="#Introduction" >I. Introduction ........................................................................................................................................... 4</a> -->
        <!--         <a href="#History" >I.1. History ................................................................................................................................................ 4</a> -->
        <!--         <a href="#What is Warthog Network?" >I.2. What is Warthog Network? ................................................................................................ 4</a> -->
        <!--         <a href="#Revolutionary features" >II. Revolutionary features .................................................................................................................. 5</a> -->
        <!--         <a href="#Browser nodes" >III. Browser nodes ................................................................................................................................... 5</a> -->
        <!--         <a href="#WasmFS" >III.1. WasmFS .......................................................................................................................................... 5</a> -->
        <!--         <a href="#communication over WebRTC" >III.2. P2P communication over WebRTC ............................................................................ 5</a> -->
        <!--         <a href="#DeFi2" >IV. DeFi2 ........................................................................................................................................................ 5</a> -->
        <!--         <a href="#Custom Matching engine" >IV.1. Custom Matching engine .................................................................................................. 5</a> -->
        <!--         <a href="#New DeFi features" >IV.2. New DeFi features .................................................................................................................. 6</a> -->
        <!--         <a href="#Balance cloning" >Balance cloning ............................................................................................................................. 6</a> -->
        <!--         <a href="#Paying dividends to holders" >Paying dividends to holders .................................................................................................. 6</a> -->
        <!--         <a href="#Scriptless airdrops" >Scriptless airdrops ........................................................................................................................ 6</a> -->
        <!--         <a href="#Orderbook Surface Propagation" >IV.3. Orderbook Surface Propagation (Later) .................................................................. 6</a> -->
        <!--         <a href="#V. Janushash" >V. Janushash .............................................................................................................................................. 6</a> -->
        <!--         <a href="#V.1. Proof of Balanced Work" >V.1. Proof of Balanced Work ........................................................................................................ 6</a> -->
        <!--         <a href="#V.1. Introduction" >Introduction ..................................................................................................................................... 6</a>     -->
        <!--         <a href="#V.2. Janushash" >V.2. Janushash ..................................................................................................................................... 7</a> -->
        <!--         <a href="#Balancing" >Balancing ........................................................................................................................................... 7</a> -->
        <!--         <a href="#Hashrate Decentralization" >V.3. Hashrate Decentralization ................................................................................................. 7</a> -->
        <!--         <a href="#Fighting Farms" >Fighting Farms ............................................................................................................................... 7</a> -->
        <!--         <a href="#Satoshi’s vision" >Satoshi’s vision ................................................................................................................................ 7</a> -->
        <!--         <a href="#V.4. ASIC Resistance" >V.4. ASIC Resistance ........................................................................................................................ 8</a> -->
        <!--         <a href="#Inherited ASIC Resistance" >Inherited ASIC Resistance ...................................................................................................... 8</a> -->
        <!--         <a href="#Detection of suspicious hashrate" >Detection of suspicious hashrate ...................................................................................... 9</a> -->
        <!--         <a href="#Simple Algorithm Adaption" >Simple Algorithm Adaption .................................................................................................. 9</a> -->
        <!--         <a href="#V.5. Other Benefits" >V.5. Other Benefits ............................................................................................................................ 9</a> -->
        <!--         <a href="#Escaping one-dimensional mining boredom" >Escaping one-dimensional mining boredom .......................................................... 9</a> -->
        <!--         <a href="#Favoring the little guy" >Favoring the little guy ............................................................................................................. 10</a>     -->
        <!--         <a href="#Technical Details" >VI. Technical Details ............................................................................................................................ 10</a> -->
        <!--         <a href="#Retarget Logic" >VI.1. Retarget Logic ......................................................................................................................... 10</a> -->
        <!--         <a href="#Emission Scheme" >VI.2. Emission Scheme ................................................................................................................. 10</a> -->
        <!--         <a href="#Coin Precision" >VI.3. Coin Precision ........................................................................................................................... 11</a> -->
        <!--         <a href="#One-of-a-kind chain descriptor based sync" >VI.4. One-of-a-kind chain descriptor based sync ........................................................ 11</a> -->
        <!--         <a href="#SQLite backed block store" >VI.5. SQLite backed block store .............................................................................................. 12</a> -->
        <!--         <a href="#Account based architecture" >VI.6. Account based architecture .......................................................................................... 12</a> -->
        <!--         <a href="#Fee specification" >VI.7. Fee specification .................................................................................................................... 12</a> -->
        <!--         <a href="#Roadmap 2024 - 2025" >VII. Roadmap 2024 - 2025 ............................................................................................................... 13</a> -->
        <!--         <a href="#VIII. Summary" >VIII. Summary .......................................................................................................................................... 13</a> -->
        <!--         <a href="#Appendix A. Block Structure" >Appendix A. Block Structure ........................................................................................................ 13</a> -->
        <!--         <a href="#Mining section" >A.1. Mining section .......................................................................................................................... 14</a>     -->
        <!--         <a href="#New address section" >A.2. New address section ........................................................................................................... 14</a> -->
        <!--         <a href="#Reward section" >A.3. Reward section ........................................................................................................................ 14</a> -->
        <!--         <a href="#Transfer section" >A.4. Transfer section ....................................................................................................................... 15</a> -->
        <!--         <a href="#Appendix B. Link Collection" >Appendix B. Link Collection .......................................................................................................... 16</a> -->
        <!--         <a href="#Bibliography" >Bibliography ............................................................................................................................................. 16</a>  -->
        <!--     </div> -->
        <!--     <div class="ToC2"> -->
        <!--         <a href="#Introduction" >I. Introduction .......... 4</a> -->
        <!--         <a href="#History" >I.1. History ................ 4</a> -->
        <!--         <a href="#What is Warthog Network?" >I.2. What is Warthog Network? ........ 4</a> -->
        <!--         <a href="#Revolutionary features" >II. Revolutionary features ............... 5</a> -->
        <!--         <a href="#Browser nodes" >III. Browser nodes .............. 5</a> -->
        <!--         <a href="#WasmFS" >III.1. WasmFS ................. 5</a> -->
        <!--         <a href="#communication over WebRTC" >III.2. P2P communication over WebRTC ... 5</a> -->
        <!--         <a href="#DeFi2" >IV. DeFi2 ................5</a> -->
        <!--         <a href="#Custom Matching engine" >IV.1. Custom Matching engine ......... 5</a> -->
        <!--         <a href="#New DeFi features" >IV.2. New DeFi features ................... 6</a> -->
        <!--         <a href="#Balance cloning" >Balance cloning .............6</a> -->
        <!--         <a href="#Paying dividends to holders" >Paying dividends to holders .............. 6</a> -->
        <!--         <a href="#Scriptless airdrops" >Scriptless airdrops ................ .6</a> -->
        <!--         <a href="#Orderbook Surface Propagation" >IV.3. Orderbook Surface Propagation (Later) ... 6</a> -->
        <!--         <a href="#V. Janushash" >V. Janushash ............ 6</a> -->
        <!--         <a href="#V.1. Proof of Balanced Work" >V.1. Proof of Balanced Work ... 6</a> -->
        <!--         <a href="#V.1. Introduction" >Introduction .......... 6</a>     -->
        <!--         <a href="#V.2. Janushash" >V.2. Janushash .......... 7</a> -->
        <!--         <a href="#Balancing" >Balancing ......... 7</a> -->
        <!--         <a href="#Hashrate Decentralization" >V.3. Hashrate Decentralization ...... 7</a> -->
        <!--         <a href="#Fighting Farms" >Fighting Farms ......... 7</a> -->
        <!--         <a href="#Satoshi’s vision" >Satoshi’s vision ........... 7</a> -->
        <!--         <a href="#V.4. ASIC Resistance" >V.4. ASIC Resistance ...... 8</a> -->
        <!--         <a href="#Inherited ASIC Resistance" >Inherited ASIC Resistance ...... 8</a> -->
        <!--         <a href="#Detection of suspicious hashrate" >Detection of suspicious hashrate ... 9</a> -->
        <!--         <a href="#Simple Algorithm Adaption" >Simple Algorithm Adaption ... 9</a> -->
        <!--         <a href="#V.5. Other Benefits" >V.5. Other Benefits ... 9</a> -->
        <!--         <a href="#Escaping one-dimensional mining boredom" >Escaping one-dimensional mining boredom ... 9</a> -->
        <!--         <a href="#Favoring the little guy" >Favoring the little guy ....... 10</a>     -->
        <!--         <a href="#Technical Details" >VI. Technical Details ......... 10</a> -->
        <!--         <a href="#Retarget Logic" >VI.1. Retarget Logic ............. 10</a> -->
        <!--         <a href="#Emission Scheme" >VI.2. Emission Scheme ........... 10</a> -->
        <!--         <a href="#Coin Precision" >VI.3. Coin Precision ............. 11</a> -->
        <!--         <a href="#One-of-a-kind chain descriptor based sync" >VI.4. One-of-a-kind chain descriptor based sync ... 11</a> -->
        <!--         <a href="#SQLite backed block store" >VI.5. SQLite backed block store .... 12</a> -->
        <!--         <a href="#Account based architecture" >VI.6. Account based architecture ... 12</a> -->
        <!--         <a href="#Fee specification" >VI.7. Fee specification .... 12</a> -->
        <!--         <a href="#Roadmap 2024 - 2025" >VII. Roadmap 2024 - 2025 ..... 13</a> -->
        <!--         <a href="#VIII. Summary" >VIII. Summary ...... 13</a> -->
        <!--         <a href="#Appendix A. Block Structure" >Appendix A. Block Structure ... 13</a> -->
        <!--         <a href="#Mining section" >A.1. Mining section ........... 14</a>     -->
        <!--         <a href="#New address section" >A.2. New address section ... 14</a> -->
        <!--         <a href="#Reward section" >A.3. Reward section ... 14</a> -->
        <!--         <a href="#Transfer section" >A.4. Transfer section ... 15</a> -->
        <!--         <a href="#Appendix B. Link Collection" >Appendix B. Link Collection ... 16</a> -->
        <!--         <a href="#Bibliography" >Bibliography ..... 16</a>  -->
        <!--     </div> -->
        <!--     </div> -->
        <!--      -->
        <!--         <header class="center"> -->
        <!--             <h1>Warthog Network</h1> -->
        <!--             <h1 class="center">Rethinking the Blockchain</h1> -->
        <!--             <p>2024-10-29</p> -->
        <!--             <h2 id="Introduction">I. Introduction</h2> -->
        <!--             <h2 id="History">I.1. History</h2> -->
        <!--         </header> -->
        <!--         <p class="parawhite"> -->
        <!--             Originally, Warthog was written as a fun and experimental -->
        <!--             side project of its original developers Pumbaa, Timon and -->
        <!--             Rafiki has who work in blockchain industry. Initially there -->
        <!--             was no specific purpose or use case planned. Instead, the -->
        <!--             goal was firstly to revive the days when crypto was a fun -->
        <!--             and an interest- ing experiment, and secondly -->
        <!--         </p> -->
        <!--         <p class="parawhite"> -->
        <!--             However soon after its inception a vibrant community started -->
        <!--             to form around the young project and with it new -->
        <!--             contributors joined the project bringing a fresh wind of -->
        <!--             development support and innovative ideas. The project -->
        <!--             started to grow up and is still growing today. -->
        <!--         </p> -->
        <!--  -->
        <!--         <h2 id="What is Warthog Network?">I.2. What is Warthog Network?</h2> -->
        <!--         <p> -->
        <!--             Warthog is the first Proof-of-Balanced-Work (PoBW) Layer 1 -->
        <!--             network trying to push the boundary of what is technically -->
        <!--             possible by implementing mul- tiple highly innovative and -->
        <!--             unique features including -->
        <!--             <li> -->
        <!--                 Janushash (first anti-farm balanced CPU/GPU combo PoBW -->
        <!--                 algo) -->
        <!--             </li> -->
        <!--             <li> -->
        <!--                 Chain descriptor sync (new efficient and -->
        <!--                 resource-friendly sync) -->
        <!--             </li> -->
        <!--             <li> -->
        <!--                 SQLite blockstore (easy cross-platform copy of chain -->
        <!--                 file) -->
        <!--             </li> -->
        <!--             <li> -->
        <!--                 Full browser nodes (start a full node by opening a -->
        <!--                 website) -->
        <!--             </li> -->
        <!--             <li> -->
        <!--                 WasmFS support (browser nodes can persist whole chain) -->
        <!--             </li> -->
        <!--             <li>WebRTC support (browser nodes can communicate P2P)</li> -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             Unlike may other cryptocurrency projects we are not a fork -->
        <!--             of any other pro- ject. Instead, the code is freshly written -->
        <!--             in the C++ programming language. New software always bears -->
        <!--             the risk of unforeseen bugs but at the same time the real -->
        <!--             effort put into this project sets it apart from most -->
        <!--             competitors. -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             As a community project we are trying to be as transparent -->
        <!--             and fair as possible and avoid the fishy and questionable -->
        <!--             practice currently seen in most other new projects: we had a -->
        <!--             fair launch with no team allocation or premine, therefore -->
        <!--             donations for developments are always welcome! -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             Warthog is neither a company nor an organization. It is -->
        <!--             rather a loose team of passionate crypto enthusiasts who are -->
        <!--             contributing to the project in their free time. Bear in mind -->
        <!--             that team members may decide to leave the project at any -->
        <!--             time, in fact Timon, one of the original developers has -->
        <!--             already left the team. -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             Therefore we are constantly trying to expand the stronger -->
        <!--             community behind Warthog. The community is welcome to take -->
        <!--             actively part in the evolution of Warthog. The logo, the -->
        <!--             explorer and other milestones were contributed by -->
        <!--             volunteers. If you think you can help, please let us know! -->
        <!--         </p> -->
        <!--  -->
        <!--         <h2 id="Revolutionary features">II. Revolutionary features</h2> -->
        <!--         <p> -->
        <!--             There are several noatable features that are exclusive to -->
        <!--             Warthog across the industry. Section V. -->
        <!--         </p> -->
        <!--         <h2 id="Browser nodes">III. Browser nodes</h2> -->
        <!--         <p>TODO</p> -->
        <!--         <h2 id="WasmFS">III.1. WasmFS</h2> -->
        <!--         <p>TODO</p> -->
        <!--  -->
        <!--         <h2 id="communication over WebRTC">III.2. P2P communication over WebRTC</h2> -->
        <!--         <p> -->
        <!--             P2P communication between Browsers is possible via the -->
        <!--             WebRTC protocol. This protocol has to be signaled on -->
        <!--             connection establishment, i.e. a service needs to perform -->
        <!--             negotiation work before both ends are connectd directly. -->
        <!--             Nodes themselves will be configured to do this such that no -->
        <!--             external services will be necessary apart from being -->
        <!--             connected to the Warthog network. -->
        <!--         </p> -->
        <!--         <h2 id="DeFi2">IV. DeFi2</h2> -->
        <!--         <p> -->
        <!--             We will hard-code DeFi within Warthog nodes. On the one hand -->
        <!--             this puts additional burden on core developers because DeFi -->
        <!--             code must be written instead of leaving this task for smart -->
        <!--             contract developers. But on the other hand it yields several -->
        <!--             advantages and extends DeFi possibilities: -->
        <!--             <li>Unified and systematic treatment of DeFi and assets</li> -->
        <!--             <li> -->
        <!--                 No Service fragmentation like countless swap service -->
        <!--                 clones -->
        <!--             </li> -->
        <!--             <li> -->
        <!--                 No unfair practices for scammers like additional fees or -->
        <!--                 supply inflation hidden behind smart contract logic. -->
        <!--             </li> -->
        <!--             <li> -->
        <!--                 Clear foundation to check how each token was initially -->
        <!--                 distributed (Fair auction or just minted out of thin -->
        <!--                 air) -->
        <!--             </li> -->
        <!--             <li> -->
        <!--                 Custom matching engine to solve MEV extraction issue -->
        <!--                 that plagues DeFi, see Section IV.1.. -->
        <!--             </li> -->
        <!--             <li> -->
        <!--                 Additional features such as clone balance distribution, -->
        <!--                 dividends, scriptless airdrops. -->
        <!--             </li> -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             We call this concept and its extended capabilities DeFi2.0. -->
        <!--         </p> -->
        <!--  -->
        <!--         <h2 id="Custom Matching engine">IV.1. Custom Matching engine</h2> -->
        <!--         <p> -->
        <!--             A matching engine that determines a single price for all buy -->
        <!--             and sell orders within a block will invalidate front and -->
        <!--             back running and save Warthog from MEV bots without the need -->
        <!--             to hide the order book. Such a matching engine cannot -->
        <!--             inspect DeFi orders separately as is done in today’s DeFi -->
        <!--             implemen- tations, but has to be aware of the collection of -->
        <!--             all buy and sell orders and pool liquidity to find a fair -->
        <!--             price. This means that <strong -->
        <!--                 >nodes need to be DeFi aware</strong -->
        <!--             >and this is the most important difference to DeFi based on -->
        <!--             smart contracts. To solve the MEV problem, nodes need to -->
        <!--             talk DeFi and have appropriate code at block processing -->
        <!--             level, or even at mempool and networking level, see Section -->
        <!--             IV.3. for details. -->
        <!--         </p> -->
        <!--         <h2 id="New DeFi features">IV.2. New DeFi features</h2> -->
        <!--         <p>TODO</p> -->
        <!--         <h2 id="Balance cloning">Balance cloning</h2> -->
        <!--         <h2 id="Paying dividends to holders">Paying dividends to holders</h2> -->
        <!--         <h2 id="Scriptless airdrops">Scriptless airdrops</h2> -->
        <!--  -->
        <!--         <br /> -->
        <!--         <h2 id="Orderbook Surface Propagation">IV.3. Orderbook Surface Propagation (Later)</h2> -->
        <!--         <p> -->
        <!--             At a later stage we will focus on implementing a new method -->
        <!--             to lower order fees. Nodes can inspect order prices and only -->
        <!--             share orders from their mempools which have better buy/sell -->
        <!--             price than what peers know. This way only the surface of the -->
        <!--             order book is transmitted between nodes up to the point -->
        <!--             where buy and sell overlap, i.e. where order matching is -->
        <!--             possible. This idea shall be more elaborated at a later -->
        <!--             stage. -->
        <!--         </p> -->
        <!--         <h2 id="V. Janushash">V. Janushash</h2> -->
        <!--         <h2 id="V.1. Proof of Balanced Work">V.1. Proof of Balanced Work</h2> -->
        <!--         <h3 id="V.1. Introduction">Introduction</h3> -->
        <!--         <p> -->
        <!--             Proof of Balanced Work (PoBW) was first formulated in 2023 -->
        <!--             by Warthog community developer “CoinFuMasterShifu” [1] and -->
        <!--             was specifically imple- mented for Warthog for the first -->
        <!--             time. Compared to classical Proof of Work, the class of -->
        <!--             Proof of Balanced Work (PoBW) algorithms is very different. -->
        <!--             Instead of only employing one hash function they combine -->
        <!--             multiple hash functions in a multiplicative way. The -->
        <!--             mathematical theory of considering a multiplicative -->
        <!--             combination of hashes, i.e. hash products, was established -->
        <!--             in this paper for Warthog and currently there is no other -->
        <!--             crypto project using Proof of Balanced Work for consensus. -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             Combining different hash functions multiplicatively has the -->
        <!--             advantage that -->
        <!--         </p> -->
        <!--         <br /> -->
        <!--         <li> -->
        <!--             different hash functions can be mined in parallel devices at -->
        <!--             different hashrates using a multi-stage filtering approach -->
        <!--             and -->
        <!--         </li> -->
        <!--         <li> -->
        <!--             efficient mining requires mining of all involved algorithms -->
        <!--             for each block in contrast to previous failed attempts to -->
        <!--             construct multi-algorithm block chains by using individual -->
        <!--             difficulties for each algorithm (Myriad Coin, DigiByte, -->
        <!--             Verge). For example Verge was hacked by focusing only on one -->
        <!--             algorithm. -->
        <!--         </li> -->
        <!--  -->
        <!--         <h2 id="V.2. Janushash">V.2. Janushash</h2> -->
        <!--  -->
        <!--         <p> -->
        <!--             Essentially, Proof of Balanced Work algorithms are simply -->
        <!--             the multiplicative combinations of existing hash functions. -->
        <!--             Warthog’s Janushash algorithm combines two hash functions: -->
        <!--         </p> -->
        <!--         <li>triple Sha256 (Sha256t) and</li> -->
        <!--         <li>Verushash v2.2</li> -->
        <!--  -->
        <!--         <h3 id="Balancing">Balancing</h3> -->
        <!--         <p> -->
        <!--             Energy-efficient mining of Proof of Balanced Work algorithms -->
        <!--             requires find- ing a good balance between Sha256t and -->
        <!--             Verushash hashrates. The best combination depends on -->
        <!--             hardware and energy cost but it is clear that min- ing -->
        <!--             without a GPU or with a weak CPU won’t be competitive. The -->
        <!--             balancing requirement coined the name “Proof of Balanced -->
        <!--             Work”. -->
        <!--         </p> -->
        <!--         <h2 id="Hashrate Decentralization">V.3. Hashrate Decentralization</h2> -->
        <!--         <h3 id="Fighting Farms">Fighting Farms</h3> -->
        <!--         <p> -->
        <!--             Interestingly, the Janushash algorithm keeps away both, GPU -->
        <!--             farms and CPU farms: -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             GPU farms usually save on the CPU side, because CPU -->
        <!--             performance is not relevant for mining GPU algorithms. -->
        <!--             Therefore such farms perform poorly on Janushash. GPU farm -->
        <!--             owners would need to make significant investments in -->
        <!--             efficient and performant motherboards and CPUs to improve -->
        <!--             their GPU/ CPU balance for efficiently mining Janushash. -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             CPU farms perform very poorly on Janushash because of the -->
        <!--             lack of accel- erated triple Sha256 hash evaluation. The -->
        <!--             same applies to most botnets. -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             This means large mining farms and botnets play a much -->
        <!--             smaller role in Warthog than they do in other proof of work -->
        <!--             cryptocurrencies, which increases decentralization of -->
        <!--             hashrate. -->
        <!--         </p> -->
        <!--         <h3 id="Satoshi’s vision">Satoshi’s vision</h3> -->
        <!--         <p> -->
        <!--             Originally, Satoshi Nakamoto had an idealized hope for -->
        <!--             mining being a democratized way of establishing consensus. -->
        <!--             This can be seen for example in his famous whitepaper [2] -->
        <!--             where it says: -->
        <!--         </p> -->
        <!--         <p>'Proof-of-work is essentially one-CPU-one-vote.'</p> -->
        <!--         <p> -->
        <!--             From this article [3] about Laszlo Hanyecz’s correspondence -->
        <!--             with Satoshi we can observe that Satoshi was not amazed -->
        <!--             about the fact that GPU mining would disrupt this idealized -->
        <!--             hope: -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             'One of the first emails Satoshi had sent the man was in -->
        <!--             response to him describing his proposed GPU miner. Mainly, -->
        <!--             Satoshi was none-too- pleased, asking Hanyecz to slow down -->
        <!--             with this.' -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             'Satoshi explained that, at the time, one of the biggest -->
        <!--             attractions possible is the fact that anyone can download -->
        <!--             Bitcoin and start mining with their laptops. Without that, -->
        <!--             it wouldn’t have gained as much traction.' -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             He knew that with the advent of GPU mining, many CPU miners -->
        <!--             would be kicked out of the network, which would be against -->
        <!--             his vision of fair, equal and decentralized mining. -->
        <!--             Therefore he hoped to delay this as long as possible. Figure -->
        <!--             1 shows one of his posts on Bitcointalk. -->
        <!--         </p> -->
        <!--         <p class="center"> -->
        <!--             Figure 1 — Satishi’s hope to postpone GPU arms race. -->
        <!--         </p> -->
        <!--         <img src={Whitepaperimg.src} /> -->
        <!--         <p> -->
        <!--             We all know that his hopes have not been fulfilled, today -->
        <!--             Bitcoin is mined on specialized expensive hardware and only -->
        <!--             those with access to this hardware can participate in -->
        <!--             mining. After all, Satoshi was not able to solve the issue -->
        <!--             of centralized mining. -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             We are confident that the use of Proof of Balanced Work -->
        <!--             solves this issue to a large extent when the combined hash -->
        <!--             functions are carefully selected. In Janushash, the two hash -->
        <!--             functions Sha256t and Verushash where chosen to require a -->
        <!--             GPU and a CPU connected with sufficiently large bandwidth. -->
        <!--             This was done to target typical gaming PCs. As described -->
        <!--             above, with this choice farms cannot easily join the network -->
        <!--             without being forced to make additional investments just for -->
        <!--             mining Warthog. This democratizes mining and brings Warthog -->
        <!--             closer to Satoshi’s vision. -->
        <!--         </p> -->
        <!--         <h2 id="V.4. ASIC Resistance">V.4. ASIC Resistance</h2> -->
        <!--         <p> -->
        <!--             As technology advances, so does specialized mining hardware, -->
        <!--             especially when potential profits are high. There is nothing -->
        <!--             that can be done against this fact. However there are three -->
        <!--             reasons why Warthog is more robust against ASIC threats than -->
        <!--             other PoW cryptocurrencies: -->
        <!--         </p> -->
        <!--         <h3 id="Inherited ASIC Resistance">Inherited ASIC Resistance</h3> -->
        <!--         <p> -->
        <!--             When it comes to ASIC resistance, Proof of Balanced Work is -->
        <!--             stronger than its strongest ingredient. To accelerate -->
        <!--             mining, an ASIC would need to be able accelerate computation -->
        <!--             of all combined hash functions to avoid a bottleneck effect. -->
        <!--             In addition an ASIC would need enough bandwidth between the -->
        <!--             hardware sections computing different hash functions as well -->
        <!--             as calibration and tuning to optimize their -->
        <!--             intercommunication and coordination. -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             In particular, Janushash inherits ASIC-resistance from -->
        <!--             Verushash v2.2 which is currently mined on CPUs and GPUs, -->
        <!--             but not on FPGAs/ASICs, and the need to also require SHA256t -->
        <!--             hashrate makes Janushash even more ASIC- resistant. -->
        <!--         </p> -->
        <!--         <h3 id="Detection of suspicious hashrate">Detection of suspicious hashrate</h3> -->
        <!--         <p> -->
        <!--             In traditional Proof of Work networks we only have one -->
        <!--             marker to analyze network hashrate, namely the network -->
        <!--             difficulty. It can be used to estimate the total hashrate of -->
        <!--             all miners in the network. However we cannot tell whether -->
        <!--             some actors use specialized hardware to gain an unfair -->
        <!--             advantage over normal miners. -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             Janushash however combines two hash functions and harnessing -->
        <!--             the prob- ability theory and statistics, we can extract -->
        <!--             information about the Sha256t/ Verushash hashrate ratio used -->
        <!--             to mine a block. This information is shown publicly in the -->
        <!--             blockchain explorer. -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             In addition to the network difficulty, this second marker -->
        <!--             provides useful information on the network hashrate: It -->
        <!--             allows to spot suspicious hashrate immediately. In Warthog -->
        <!--             it is much more difficult for ASICs to stay unde- tected -->
        <!--             because they must not only successfully mine blocks, but -->
        <!--             also mimic the hashrate ratio used by honest miners. This is -->
        <!--             another unique property of Proof of Balanced Work. -->
        <!--         </p> -->
        <!--         <h3 id="Simple Algorithm Adaption">Simple Algorithm Adaption</h3> -->
        <!--         <p> -->
        <!--             The fundamental reason for the favorable properties of the -->
        <!--             Janushash algo- rithm is not the particular choice of the -->
        <!--             combined hash functions itself, but the choice to rely on -->
        <!--             Proof of Balanced Work to combine different hash functions -->
        <!--             multiplicatively. This means that if ASICs really join the -->
        <!--             network one day, we can simply exchange the combined hash -->
        <!--             functions, for example for Blake3 on GPU and RandomX on CPU, -->
        <!--             while preserving all the advantages listed here. Combining -->
        <!--             established hash functions allows the creation new -->
        <!--             algorithms fast while benefiting from their maturity and -->
        <!--             proven properties at the same time. This allows Warthog to -->
        <!--             adapt quickly when needed. -->
        <!--         </p> -->
        <!--         <h2 id="V.5. Other Benefits">V.5. Other Benefits</h2> -->
        <!--         <p> -->
        <!--             Warthog tries to revive the good old days when mining was -->
        <!--             fun. The unique properties of the Janushash algorithm help -->
        <!--             to achieve this goal: -->
        <!--         </p> -->
        <!--         <h3 id="Escaping one-dimensional mining boredom">Escaping one-dimensional mining boredom</h3> -->
        <!--         <p> -->
        <!--             In a way, traditional mining in cryptocurrency is -->
        <!--             one-dimensional, the goal is simply to find the best -->
        <!--             hardware for evaluating some hash function. In contrast, -->
        <!--             mining Warthog is two-dimensional: there are two hash -->
        <!--             functions Sha256t and Verushash v2.2, and both hashrates are -->
        <!--             relevant for the mining efficiency. This leads to much more -->
        <!--             versatile options and motivates miners to experiment with -->
        <!--             endless hardware setups. Vivid discussions about the best -->
        <!--             combinations bring Warthog mining to life. -->
        <!--         </p> -->
        <!--         <h3 id="Favoring the little guy">Favoring the little guy</h3> -->
        <!--         <p> -->
        <!--             As explained above, established farms require substantial -->
        <!--             investments in order to mine Warthog efficiently and making -->
        <!--             such investment only for mining Warthog might not be -->
        <!--             reasonable for most farms. -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             On the other hand gamers usually have systems with modern -->
        <!--             platforms and CPUs paired with sufficiently good GPUs to -->
        <!--             mine Warthog efficiently. Since farms and botnets are less -->
        <!--             of a direct competitor in Warthog than they are in other -->
        <!--             Proof of Work cryptocurrencies, this will reflect in -->
        <!--             increased mining returns for the average gamer or miner, -->
        <!--             which will in turn contribute to Warthog’s popularity. -->
        <!--         </p> -->
        <!--         <h2 id="Technical Details">VI. Technical Details</h2> -->
        <!--         <h3 id="Retarget Logic">VI.1. Retarget Logic</h3> -->
        <!--         <p>Similarly to Bitcoin, the warthog blockchain will scale its difficulty periodically -->
        <!--             to adjust for changing hashrate. Changes in difficulty is partitioned into two -->
        <!--             phases:</p> -->
        <!--             <li>In the initial phase the difficulty is adjusted every 720 blocks which -->
        <!--                 corresponds to approximately 4 hours.</li> -->
        <!--             <li>In the second phase the difficulty is adjusted every 8640 blocks which -->
        <!--                 corresponds to 2 days.</li> -->
        <!--                 <p>The reason for this two-phase approach is the high variability of hashrate in -->
        <!--                     early stages of a project’s life which initially requires a more frequent difficulty -->
        <!--                     adjustment. On the other hand too short intervals also have disadvantages -->
        <!--                     such as the tendency to oscillate and a possibly higher impact of faked -->
        <!--                     timestamps. Therefore the second phase stretches the difficulty adjustment -->
        <!--                     interval after the initial phase.</p> -->
        <!--                 <p>While in Bitcoin the difficulty change is capped by factor 4, we have imple- -->
        <!--                     mented a factor 2 cap because our difficulty adjustment is more frequent -->
        <!--                     than 2 weeks.</p> -->
        <!--                     <h2 id="Emission Scheme">VI.2. Emission Scheme</h2> -->
        <!--                     <p>Warthog was started without any premined or reserved amount of coins on -->
        <!--                         June 29, 2023. The project implements a classical halving-based emission -->
        <!--                         scheme with halvings occurring every 3153600 blocks (every 2 years). The -->
        <!--                         emission for the next 4 years is summarized in the following table:</p> -->
        <!--                         <p class="center">Table 1 — Emission scheme</p> -->
        <!--  -->
        <!--  -->
        <!--         <div class="center"> -->
        <!--             <table> -->
        <!--                 <thead -->
        <!--                     ><tr -->
        <!--                         ><th>Date</th><th>Lifetime</th><th -->
        <!--                             >% of total supply in circulation</th -->
        <!--                         ></tr -->
        <!--                     ></thead -->
        <!--                 > -->
        <!--                 <tr><td>June 29 2023</td><td>0 years</td><td>0%</td></tr -->
        <!--                 > -->
        <!--                 <tr -->
        <!--                     ><td>June 29 2024</td><td>1 years</td><td>25%</td -->
        <!--                     ></tr -->
        <!--                 > -->
        <!--                 <tr -->
        <!--                     ><td>June 29 2025</td><td>2 years</td><td>50%</td -->
        <!--                     ></tr -->
        <!--                 > -->
        <!--                 <tr -->
        <!--                     ><td>June 29 2026</td><td>3 years</td><td>62.5%</td -->
        <!--                     ></tr -->
        <!--                 > -->
        <!--                 <tr -->
        <!--                     ><td>June 29 2027</td><td>4 years</td><td>75%</td -->
        <!--                     ></tr -->
        <!--                 > -->
        <!--             </table> -->
        <!--         </div> -->
        <!--         <p> -->
        <!--             There is no tail emission which means there is a hard cap of -->
        <!--             the amount in circulation. The hard cap is 18921599.68464 -->
        <!--             WART (around 19 million coins). -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             Before halving occurs every block yields 3 WART as miner -->
        <!--             reward. Since the block time is 20 seconds, every day -->
        <!--             approximately 60/20 * 60 * 24 = 4320 blocks and 12960 WART -->
        <!--             are mined before halving. -->
        <!--         </p> -->
        <!--         <h2 id="Coin Precision">VI.3. Coin Precision</h2> -->
        <!--         <p> -->
        <!--             The reference implementation uses the C++ data type uint64_t -->
        <!--             for storing amounts of WART. This is a 64 bit unsigned -->
        <!--             integer. To represent fractions of a coin these values are -->
        <!--             interpreted in fixed point arithmetic with 8 digits -->
        <!--             precision. This means that 1 WART is internally represented -->
        <!--             as uint64_t number with value 100000000. The smallest -->
        <!--             representable step is 0.00000001 WART and represented as -->
        <!--             uint64_t number with value 1. -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             For easier integration all API endpoints return both, the -->
        <!--             WART amount as a string (like "amount": "12.0"), and the -->
        <!--             internal integer representation indicated with label "E8" -->
        <!--             (like "amountE8": 1200000000). -->
        <!--         </p> -->
        <!--         <h2 id="One-of-a-kind chain descriptor based sync">VI.4. One-of-a-kind chain descriptor based sync</h2> -->
        <!--         <p> -->
        <!--             This project is an experiment where the developers try out -->
        <!--             new things and push the boundary of what is possible in -->
        <!--             blockchain technology. We invented a completely unique and -->
        <!--             new way of syncing nodes which is not presently not known to -->
        <!--             the industry. -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             Traditionally during synchronization new nodes request block -->
        <!--             bodies identified by block hashes. The replying node has to -->
        <!--             look up the block body based on the hash and then sends it -->
        <!--             back. -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             In contrast we have invented a node communication protocol -->
        <!--             which works without block hashes for block body lookup. In -->
        <!--             our setup nodes keep track on fork heights with other nodes. -->
        <!--             A chain descriptor is used to identify a specific chain on -->
        <!--             the peer. When a node appends to its chain, the chain -->
        <!--             descriptor remains unchanged, however the current chain -->
        <!--             descriptor is increased when the consensus chain switches to -->
        <!--             a longer fork. Block bodies for previous chains are also -->
        <!--             kept for some time in case a peer requests them. -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             When syncing nodes request block bodies identified by a -->
        <!--             chain descriptor and a block range. This way we avoid -->
        <!--             overhead in communication and lookup. -->
        <!--         </p> -->
        <!--         <h2 id="SQLite backed block store">VI.5. SQLite backed block store</h2> -->
        <!--         <p> -->
        <!--             SQLite is a battle-proven and well-established embedded SQL -->
        <!--             database engine. Warthog nodes use SQLite as their main -->
        <!--             storage engine for both, blocks and state. Nodes also index -->
        <!--             transactions and can provide basic blockchain explorer -->
        <!--             functionality directly via API thanks to SQLite. -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             SQLite databases are also portable across 32-bit and 64-bit -->
        <!--             machines and between big-endian and little-endian -->
        <!--             architectures such that chain snapshots can easily shared. -->
        <!--             Furthermore SQLite supports transactions which are essential -->
        <!--             for data integrity even in case of a power outage or node -->
        <!--             crash. -->
        <!--         </p> -->
        <!--         <p> -->
        <!--             The default SQLite database file name used for the chain is -->
        <!--             chain.db3 and can be configured via the --chain-db command -->
        <!--             line option -->
        <!--         </p> -->
        <!--         <h2 id="Account based architecture">VI.6. Account based architecture</h2> -->
        <!--         <p> -->
        <!--             Warthog implements an account based architecture. This is -->
        <!--             similar to Ethereum and different from Bitcoin's UTXO model. -->
        <!--             Every account along with its balance is stored in the State -->
        <!--             table of the chain database. For efficiency reasons accounts -->
        <!--             are referred by their id: Every account is assigned a unique -->
        <!--             auto-incremented id value on first use. This makes blocks -->
        <!--             more space-efficient since a block id only requires 8 bytes -->
        <!--             of storage whereas an address would require 20 bytes. -->
        <!--         </p> -->
        <!--         <h2 id="Fee specification">VI.7. Fee specification</h2> -->
        <!--         <p>For efficiency and compactness transaction fees are encoded as 2-byte -->
        <!--             floating-point numbers (16 bits), where the first 6 bits encode the exponent -->
        <!--             and the remaining 10 bits encode a 11 bit mantissa starting with an implicit -->
        <!--             1. This means that fee values cannot be 0 and are of lower precision than -->
        <!--             regular amount values which use 4 bytes. A fee of value of 0 specified -->
        <!--             on transaction generation will automatically transform into the minimal fee -->
        <!--             value of 0.0000001 WART .</p> -->
        <!--             <h2 id="Roadmap 2024 - 2025">VII. Roadmap 2024 - 2025</h2> -->
        <!--             <li>New “herominers” pool support (please aim for pool decentralization)</li> -->
        <!--             <li>Collect sufficient donation funds</li> -->
        <!--             <li>New website with design by BalkyBot (logo designer)</li> -->
        <!--             <li>Browser nodes</li> -->
        <!--             <li>Allow chain to be saved within browsers persistently in WASMFS.</li> -->
        <!--             <li>Port node code to Webassembly</li> -->
        <!--             <li>Browser Node GUI (started)</li> -->
        <!--             <li>Add new realtime API methods for browser nodes (started)</li> -->
        <!--             <li>Refactor network code to abstract away the communication layer -->
        <!--                 (raw TCP, Websocket, WebRTC)</li> -->
        <!--             <li>Invent a robust protocol for exchangeing peers and negotiating -->
        <!--                 (signaling) P2P WebRTC connections between nodes.</li> -->
        <!--             <li>Protocol implementation</li> -->
        <!--             <li>Testing</li> -->
        <!--             <li>DeFi2.0</li> -->
        <!--             <li>Implement custom matching engine (early demo available)</li> -->
        <!--             <li>Design database tables for modeling pools and cloning token bal- -->
        <!--                 ance with copy-on-write</li> -->
        <!--             <li>Implement new token generation</li> -->
        <!--             <li>Implement hard-coded pools with merged (liquity + limit orders) -->
        <!--                 matching</li> -->
        <!--                 <li>Implement protocol for exchanging orders between nodes</li> -->
        <!--                 <li>Change block structure to support order matching</li> -->
        <!--                 <h2 id="VIII. Summary">VIII. Summary</h2> -->
        <!--                 <p>In this whitepaper we have presented the Warthog Network crypto project -->
        <!--                     which stands out of the masses in terms of decentralization, technology -->
        <!--                     and innovation. Unique flagship features include the specifically designed -->
        <!--                     Janushash algorithm based on newly invented Proof of Balanced Work tech- -->
        <!--                     nology, which honors Satoshi’s ideals of mining democratization, the almost -->
        <!--                     finished browser full nodes with planned P2P WebRTC communication and -->
        <!--                     notably the planned DeFi2 implementation which will solve current DeFi’s -->
        <!--                     biggest problem MEV extraction and add new features such as dividends, -->
        <!--                     scriptless proportional airdrops to token holders, ICOs and more in a clean -->
        <!--                     and user-friendly way. With the fair initial coin distribution based purely on -->
        <!--                     mining and its thriving community Warthog’s future shines bright.</p> -->
        <!--         <h2 id="Appendix A. Block Structure">Appendix A. Block Structure</h2> -->
        <!--         <p> -->
        <!--             The binary content of a block is a concatenation of the -->
        <!--             following sections in their specified order: -->
        <!--         </p> -->
        <!--          -->
        <!--             <li>Mining section</li> -->
        <!--             <li>New address section</li> -->
        <!--             <li>Reward section</li> -->
        <!--             <li>Transfer section</li> -->
        <!--          -->
        <!--         <p> -->
        <!--             Below we describe the above sections. All numbers and id -->
        <!--             values are in network byte order. -->
        <!--         </p> -->
        <!--         <h3 id="Mining section">A.1. Mining section</h3> -->
        <!--         <p> -->
        <!--             This section allows miners to put 4 bytes of arbitrary data -->
        <!--             to affect the merkle hash. -->
        <!--         </p> -->
        <!--         <p class="center">Table 2 — Mining Section</p> -->
        <!--         <div class="center"> -->
        <!--             <table> -->
        <!--                 <thead><th> byte range</th><th>content</th></thead> -->
        <!--                 <tr><td>1-4 </td><td>arbitrary data</td></tr> -->
        <!--             </table> -->
        <!--         </div> -->
        <!--         <h3 id="New address section">A.2. New address section</h3> -->
        <!--         <p> -->
        <!--             This section lists new addresses that receive payments in -->
        <!--             this block and therefore need to be added to the state -->
        <!--             table. This way they will be assigned a new id value which -->
        <!--             is referenced in the other sections to specify a particular -->
        <!--             account. -->
        <!--         </p> -->
        <!--         <p class="center">Table 3 — New Address Section</p> -->
        <!--         <div class="center"> -->
        <!--             <table> -->
        <!--                 <thead -->
        <!--                     ><th> byte range</th><th -->
        <!--                         >content</th -->
        <!--                     ></thead -->
        <!--                 > -->
        <!--                 <tr><td>1-4 </td><td>number n of new addresses</td></tr> -->
        <!--                 <tr -->
        <!--                     ><td>5-(4+n*20) </td><td -->
        <!--                         >n addressess of 20 bytes each</td -->
        <!--                     ></tr -->
        <!--                 > -->
        <!--             </table> -->
        <!--         </div> -->
        <!--  -->
        <!--         <p> -->
        <!--             Miners are responsible to ensure that the addresses -->
        <!--             appearing in the new address section are not already present -->
        <!--             in the state table and are actually referenced in this -->
        <!--             block. Otherwise the block is considered invalid. -->
        <!--         </p> -->
        <!--         <h3 id="Reward section">A.3. Reward section</h3> -->
        <!--         <p> -->
        <!--             Mining reward is distributed to at least one reward address. -->
        <!--         </p> -->
        <!--         <p class="center">Table 4 — Reward Section</p> -->
        <!--         <div class="center"> -->
        <!--             <table> -->
        <!--                 <thead -->
        <!--                     ><th> byte range</th><th -->
        <!--                         >content</th -->
        <!--                     ></thead -->
        <!--                 > -->
        <!--                 <tr><td>1-2 </td><td>number r of reward entry</td></tr> -->
        <!--                 <tr><td>3-(4+r*16) </td><td>r reward entries</td></tr> -->
        <!--             </table> -->
        <!--         </div> -->
        <!--  -->
        <!--         <p>Every reward entry consists of 16 bytes:</p> -->
        <!--         <p class="center">Table 5 — Reward entry</p> -->
        <!--         <div class="center"> -->
        <!--             <table> -->
        <!--                 <thead -->
        <!--                     ><th> byte range</th><th -->
        <!--                         >content</th -->
        <!--                     ></thead -->
        <!--                 > -->
        <!--                 <tr><td>1-8</td><td>accountId</td></tr> -->
        <!--                 <tr><td>9-16</td><td>amount</td></tr> -->
        <!--             </table> -->
        <!--         </div> -->
        <!--  -->
        <!--         <p> -->
        <!--             The sum of the amounts received by the addresses listed in -->
        <!--             the mining reward section must not exceed the total mining -->
        <!--             reward (block reward + transaction fees), otherwise the -->
        <!--             block is considered invalid. -->
        <!--         </p> -->
        <!--         <p>The total size of the mining section is 2+ r*16 bytes.</p> -->
        <!--         <h3 id="Transfer section">A.4. Transfer section</h3> -->
        <!--         <p> -->
        <!--             The transfer section contains the transfers made in this -->
        <!--             block. Its binary outline is as follows: -->
        <!--         </p> -->
        <!--         <p class="center">Table 6 — Transfer Section</p> -->
        <!--         <div class="center"> -->
        <!--             <table> -->
        <!--                 <thead -->
        <!--                     ><th> byte range</th><th -->
        <!--                         >content</th -->
        <!--                     ></thead -->
        <!--                 > -->
        <!--                 <tr><td>1-4</td><td>number t of transfer entries</td></tr -->
        <!--                 > -->
        <!--                 <tr><td>5-(4+t*99)</td><td>t transfer entries</td></tr> -->
        <!--             </table> -->
        <!--         </div> -->
        <!--  -->
        <!--         <p>Every transfer entry has the following structure:</p> -->
        <!--         <p class="center">Table 7 — Transfer structure</p> -->
        <!--         <div class="center"> -->
        <!--             <table> -->
        <!--                 <thead -->
        <!--                     ><th> byte range</th><th -->
        <!--                         >content</th -->
        <!--                     ></thead -->
        <!--                 > -->
        <!--                 <tr><td>1-8</td><td>fromAccountId</td></tr> -->
        <!--                 <tr><td>9-16</td><td>pinNonce</td></tr> -->
        <!--                 <tr><td>17-18</td><td>fee</td></tr> -->
        <!--                 <tr><td>19-26</td><td>toAccountId</td></tr> -->
        <!--                 <tr><td>27-34</td><td>amount</td></tr> -->
        <!--                 <tr -->
        <!--                     ><td>35-99</td><td -->
        <!--                         >recoverable signature (65 bytes)</td -->
        <!--                     ></tr -->
        <!--                 > -->
        <!--             </table> -->
        <!--         </div> -->
        <!--  -->
        <!--         <p> -->
        <!--             Each payment entry has length 99 bytes. Compare this to the -->
        <!--             average transaction size of around 200 bytes per Bitcoin -->
        <!--             transfer. -->
        <!--         </p> -->
        <!--          -->
        <!--         <div class="projectlinks"> -->
        <!--  -->
        <!--             <h2 id="Appendix B. Link Collection">Appendix B. Link Collection</h2> -->
        <!--             <li><a href="https://www.warthog.network/"> Website </a></li> -->
        <!--             <li><a href="https://github.com/warthog-network">Github</a></li> -->
        <!--             <li><a href="https://github.com/andrewcrypto777/wart-wallet">Gui Wallet</a></li> -->
        <!--             <li><a href="https://github.com/CoinFuMasterShifu/ProofOfBalancedWork/blob/main/PoBW.pdf">PoBW whitepaper</a></li> -->
        <!--             <li><a href="https://warthog.network/docs/janushash">Janushash</a></li> -->
        <!--             <li><a href="https://warthog.network/docs/developers/integrations/pools/">Guide for pool devs</a></li> -->
        <!--             <li><a href="https://github.com/warthog-network/warthog-guide">Guide</a></li> -->
        <!--             <li><a href="https://wartscan.io/">Explorer</a></li> -->
        <!--             <li><a href="https://discord.com/invite/QMDV8bGTdQ">Discord</a></li> -->
        <!--             <li><a href="https://t.me/warthognetwork">Telegram</a></li> -->
        <!--             <li><a href="https://bitcointalk.org/index.php?topic=5458046.0">Bitcointalk</a></li> -->
        <!--             <li><a href="https://github.com/warthog-network/Warthog/blob/master/doc/API.md">API documentation</a></li> -->
        <!--             <li><a href="https://www.reddit.com/r/warthognetwork/">Reddit</a></li> -->
        <!--             <li><a href="https://warthog.acc-pool.pw/">Pool</a></li> -->
        <!--             <li><a href="https://github.com/warthog-network/wart-dapp/releases">Wart-Dapp</a></li> -->
        <!--             <li><a href="https://www.coingecko.com/en/coins/warthog">Coingecko</a></li> -->
        <!--             <li><a href="https://exbitron.com/trade?market=wart-usdt">Exbitron</a></li> -->
        <!--             <li><a href="https://tradeogre.com/exchange/WART-USDT">Tradeogre</a></li> -->
        <!--             <li><a href="https://xeggex.com/market/WART_USDT">Xeggex</a></li> -->
        <!--             <li><a href="https://miningpoolstats.stream/warthog">Miningpoolstats</a></li> -->
        <!--             <li><a href="https://coinpaprika.com/coin/wart-warthog/">Coinpaprika</a></li> -->
        <!--             <li><a href="https://www.livecoinwatch.com/price/WarthogNetwork-WART">Livecoinwatch</a></li> -->
        <!--             <h2 id="Bibliography">Bibliography</h2> -->
        <!--             <div class="Bibliography"> -->
        <!--            <p>[1] &nbsp;&nbsp;C. M. Shifu, “Proof of Balanced Work: The Theory of Mining Hash Prod- -->
        <!--             ucts.” Accessed: Oct. 20, 2024. [Online]. Available: <a href="https://raw.githubusercontent.com/CoinFuMasterShifu/ProofOfBalancedWork/main/PoBW.pdf">here</a></p> -->
        <!--            <p>[2] &nbsp;&nbsp;S. Nakamoto, “Bitcoin: A Peer-to-Peer Electronic Cash System,” May 2009, -->
        <!--             [Online]. Available: <a href="http://www.bitcoin.org/bitcoin.pdf">here</a></p> -->
        <!--            <p>[3] &nbsp;&nbsp;A. Raza, “Laszlo Hanyecs Claims Satoshi Invented GPU Mining To Pre- -->
        <!--             vent 51% Attacks.” Accessed: Oct. 20, 2024. [Online]. Available: <a href="https://insidebitcoins.com/news/laszlo-hanyecs-claims-satoshi-invented-gpu-mining-to-prevent-51-attacks">here</a></p> -->
        <!--             </div> -->
        <!--         </div> -->
        <!--     </div> -->
        <!-- </div> -->
    </div>
  */}
  </>
</BaseLayout>

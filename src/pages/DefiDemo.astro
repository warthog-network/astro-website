---
import BaseLayout from "../layouts/BaseLayout.astro";
import BuyTable from "../components/BuyTable.astro";
const title = "DeFi Demo";
import "../styles.css";
---

<BaseLayout title={title}>
  <div class="container mx-auto min-h-[550px]">
    <!-- <h1 class="text-3xl text-center text-yellow-600 mb-8">DeFi Demo</h1> -->
    <h1
      class="my-10 text-3xl text-center font-extrabold text-yellow-500 dark:text-white md:text-5xl lg:text-6xl"
    >
      <span
        class="text-transparent bg-clip-text bg-gradient-to-r to-[#FDB913] from-[#F25C05]"
        >DeFi Demo</span
      >
    </h1>

    <div
      class="flex md:flex-row md:p-6 p-3 flex-col gap-4 min-h-full justify-between"
    >
      <!-- Order Book -->
      <div class="flex flex-col gap-4 md:w-[33%]">
        <!-- Sell Order Book -->
        <div
          class="relative flex flex-col w-[100%] h-auto text-gray-700 bg-white rounded-xl border border-[#F9B13C]"
        >
          <div
            class="relative mx-4 mt-4 overflow-hidden text-gray-700 bg-white rounded-none bg-clip-border"
          >
            <div class="flex flex-col gap-2">
              <h5
                class="block font-montserrat text-lg leading-5 antialiased font-semibold tracking-normal text-blue-gray-900"
              >
                Sell Order Book
              </h5>
              <div class="flex flex-col gap-2">
                <div class="flex justify-between gap-2">
                  <div class="relative h-10 w-full min-w-[70px]">
                    <div
                      class="absolute grid w-8 h-8 top-2/4 right-3 -translate-y-2/4 place-items-center text-blue-gray-500"
                    >
                      <img
                        src="/public/Images/dollar-minimalistic.svg"
                        class="w-8 h-8"
                      />
                    </div>
                    <input
                      class="peer h-full w-full rounded-[7px] border border-blue-gray-200 bg-transparent px-3 py-2.5 !pr-9 font-sans text-sm font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 focus:border-2 focus:border-gray-900 focus:border-t-transparent focus:outline-0 disabled:border-0 disabled:bg-blue-gray-50"
                      placeholder=" "
                      id="sellPrice"
                    />
                    <label
                      class="before:content[' '] after:content[' '] pointer-events-none absolute left-0 -top-1.5 flex h-full w-full select-none !overflow-visible truncate text-[11px] font-normal leading-tight text-gray-500 transition-all before:pointer-events-none before:mt-[6.5px] before:mr-1 before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-t before:border-l before:border-blue-gray-200 before:transition-all after:pointer-events-none after:mt-[6.5px] after:ml-1 after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-t after:border-r after:border-blue-gray-200 after:transition-all peer-placeholder-shown:text-sm peer-placeholder-shown:leading-[3.75] peer-placeholder-shown:text-blue-gray-500 peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-gray-900 peer-focus:before:border-t-2 peer-focus:before:border-l-2 peer-focus:before:!border-gray-900 peer-focus:after:border-t-2 peer-focus:after:border-r-2 peer-focus:after:!border-gray-900 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500"
                    >
                      Price
                    </label>
                  </div>
                  <div class="relative h-10 w-full min-w-[70px]">
                    <div
                      class="absolute grid w-6 h-6 top-2/4 right-3 -translate-y-2/4 place-items-center text-blue-gray-500"
                    >
                      <img src="/public/Images/price-tag.svg" class="w-6 h-6" />
                    </div>
                    <input
                      class="peer h-full w-full rounded-[7px] border border-blue-gray-200 bg-transparent px-3 py-2.5 !pr-9 font-sans text-sm font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 focus:border-2 focus:border-gray-900 focus:border-t-transparent focus:outline-0 disabled:border-0 disabled:bg-blue-gray-50"
                      placeholder=" "
                      id="tokenAmount"
                    />
                    <label
                      class="before:content[' '] after:content[' '] pointer-events-none absolute left-0 -top-1.5 flex h-full w-full select-none !overflow-visible truncate text-[11px] font-normal leading-tight text-gray-500 transition-all before:pointer-events-none before:mt-[6.5px] before:mr-1 before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-t before:border-l before:border-blue-gray-200 before:transition-all after:pointer-events-none after:mt-[6.5px] after:ml-1 after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-t after:border-r after:border-blue-gray-200 after:transition-all peer-placeholder-shown:text-sm peer-placeholder-shown:leading-[3.75] peer-placeholder-shown:text-blue-gray-500 peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-gray-900 peer-focus:before:border-t-2 peer-focus:before:border-l-2 peer-focus:before:!border-gray-900 peer-focus:after:border-t-2 peer-focus:after:border-r-2 peer-focus:after:!border-gray-900 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500"
                    >
                      Amount
                    </label>
                  </div>
                </div>
                <button
                  class="flex select-none justify-center items-center gap-3 rounded-lg bg-gray-900 py-3 px-4 text-center text-base border-white border font-montserrat align-middle font-medium text-white shadow-md shadow-gray-900/10 transition-all hover:shadow-lg hover:shadow-gray-900/20 focus:opacity-[0.85] focus:shadow-none active:opacity-[0.85] active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none"
                  type="button"
                  id="sellButton"
                >
                  Swap TOKEN
                  <img
                    src="/public/Images/swap-vertical-circle.svg"
                    class="w-6 h-6"
                  />
                </button>
              </div>
            </div>
          </div>
          <div class="p-4">
            <table class="w-full text-left min-w-max bg-red-300">
              <thead>
                <tr>
                  <td
                    class="px-4 py-2 transition-colors cursor-pointer border-y border-blue-gray-100 bg-[#EF5831] hover:bg-blue-gray-50"
                  >
                    <p
                      class="items-center justify-between gap-2 text-white text-sm antialiased font-semibold leading-4 font-montserrat"
                    >
                      Limit
                    </p>
                  </td>
                  <td
                    class="px-4 py-2 transition-colors cursor-pointer border-y border-blue-gray-100 bg-[#EF5831] hover:bg-blue-gray-50"
                  >
                    <p
                      class="items-center justify-between gap-2 text-white text-sm antialiased font-semibold leading-4 font-montserrat"
                    >
                      Amount
                    </p>
                  </td>
                  <td
                    class="px-4 py-2 transition-colors cursor-pointer border-y border-blue-gray-100 bg-[#EF5831] hover:bg-blue-gray-50"
                  >
                    <p
                      class="items-center justify-between gap-2 text-white text-sm antialiased font-semibold leading-4 font-montserrat"
                    >
                      Filled
                    </p>
                  </td>
                </tr>
              </thead>
              <tbody id="tbodySell" class="text-red-700"> </tbody>
            </table>
          </div>
        </div>

        <!-- Buy Order Book -->
        <div
          class="relative flex flex-col w-[100%] h-auto text-gray-700 bg-white rounded-xl border border-[#F9B13C]"
        >
          <div
            class="relative mx-4 mt-4 overflow-hidden text-gray-700 bg-white rounded-none bg-clip-border"
          >
            <div class="flex flex-col gap-2">
              <h5
                class="block font-montserrat text-lg leading-5 antialiased font-semibold tracking-normal text-blue-gray-900"
              >
                Buy Order Book
              </h5>
              <div class="flex flex-col gap-2">
                <div class="flex justify-between gap-2">
                  <div class="relative h-10 w-full min-w-[70px]">
                    <div
                      class="absolute grid w-8 h-8 top-2/4 right-3 -translate-y-2/4 place-items-center text-blue-gray-500"
                    >
                      <img
                        src="/public/Images/dollar-minimalistic.svg"
                        class="w-8 h-8"
                      />
                    </div>
                    <input
                      class="peer h-full w-full rounded-[7px] border border-blue-gray-200 bg-transparent px-3 py-2.5 !pr-9 font-sans text-sm font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 focus:border-2 focus:border-gray-900 focus:border-t-transparent focus:outline-0 disabled:border-0 disabled:bg-blue-gray-50"
                      placeholder=" "
                      id="buyPrice"
                    />
                    <label
                      class="before:content[' '] after:content[' '] pointer-events-none absolute left-0 -top-1.5 flex h-full w-full select-none !overflow-visible truncate text-[11px] font-normal leading-tight text-gray-500 transition-all before:pointer-events-none before:mt-[6.5px] before:mr-1 before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-t before:border-l before:border-blue-gray-200 before:transition-all after:pointer-events-none after:mt-[6.5px] after:ml-1 after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-t after:border-r after:border-blue-gray-200 after:transition-all peer-placeholder-shown:text-sm peer-placeholder-shown:leading-[3.75] peer-placeholder-shown:text-blue-gray-500 peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-gray-900 peer-focus:before:border-t-2 peer-focus:before:border-l-2 peer-focus:before:!border-gray-900 peer-focus:after:border-t-2 peer-focus:after:border-r-2 peer-focus:after:!border-gray-900 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500"
                    >
                      Price
                    </label>
                  </div>
                  <div class="relative h-10 w-full min-w-[70px]">
                    <div
                      class="absolute grid w-6 h-6 top-2/4 right-3 -translate-y-2/4 place-items-center text-blue-gray-500"
                    >
                      <img src="/public/Images/price-tag.svg" class="w-6 h-6" />
                    </div>
                    <input
                      class="peer h-full w-full rounded-[7px] border border-blue-gray-200 bg-transparent px-3 py-2.5 !pr-9 font-sans text-sm font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 focus:border-2 focus:border-gray-900 focus:border-t-transparent focus:outline-0 disabled:border-0 disabled:bg-blue-gray-50"
                      placeholder=" "
                      id="wartAmount"
                    />
                    <label
                      class="before:content[' '] after:content[' '] pointer-events-none absolute left-0 -top-1.5 flex h-full w-full select-none !overflow-visible truncate text-[11px] font-normal leading-tight text-gray-500 transition-all before:pointer-events-none before:mt-[6.5px] before:mr-1 before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-t before:border-l before:border-blue-gray-200 before:transition-all after:pointer-events-none after:mt-[6.5px] after:ml-1 after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-t after:border-r after:border-blue-gray-200 after:transition-all peer-placeholder-shown:text-sm peer-placeholder-shown:leading-[3.75] peer-placeholder-shown:text-blue-gray-500 peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-gray-900 peer-focus:before:border-t-2 peer-focus:before:border-l-2 peer-focus:before:!border-gray-900 peer-focus:after:border-t-2 peer-focus:after:border-r-2 peer-focus:after:!border-gray-900 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500"
                    >
                      Amount
                    </label>
                  </div>
                </div>
                <button
                  class="flex select-none justify-center items-center gap-3 rounded-lg bg-gray-900 py-3 px-4 text-center text-base border-white border font-montserrat align-middle font-medium text-white shadow-md shadow-gray-900/10 transition-all hover:shadow-lg hover:shadow-gray-900/20 focus:opacity-[0.85] focus:shadow-none active:opacity-[0.85] active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none"
                  type="button"
                  id="buyButton"
                >
                  Swap WART
                  <img
                    src="/public/Images/swap-vertical-circle.svg"
                    class="w-6 h-6"
                  />
                </button>
              </div>
            </div>
          </div>
          <div class="p-4">
            <BuyTable />
          </div>
        </div>
      </div>

      <!-- Swap -->
      <div
        class="flex flex-col gap-4 border-2 border-black border-dashed justify-between rounded-xl p-4"
      >
        <div class="flex justify-between items-center gap-4">
          <div
            class="bg-[#F25C05] text-white font-inter font-normal rounded-md px-4 py-2"
            id="sellToken"
          >
            300 Token
          </div>
          <img src="/public/Images/right-arrow.svg" class="w-8 h-8" />
          <div
            class="bg-[#033298] text-white font-inter font-normal rounded-md px-4 py-2"
            id="buyWart"
          >
            150 Wart
          </div>
        </div>
        <div class="flex justify-between items-center gap-4">
          <div
            class="bg-[#033298] text-white font-inter font-normal rounded-md px-4 py-2"
            id="sellWart"
          >
            100 Wart
          </div>
          <img src="/public/Images/right-arrow.svg" class="w-8 h-8" />
          <div
            class="bg-[#F25C05] text-white font-inter font-normal rounded-md px-4 py-2"
            id="sellToken"
          >
            300 Token
          </div>
        </div>
      </div>

      <!-- Pool -->
      <div
        class="relative mt-4 overflow-hidden text-gray-700 bg-white md:w-[33%]"
      >
        <h5
          class="block font-sans text-2xl antialiased font-semibold leading-snug tracking-normal text-blue-gray-900"
        >
          Pool
        </h5>
        <table
          class="w-full mt-4 text-center border border-gray-600 rounded-md overflow-hidden"
        >
          <thead>
            <tr>
              <th
                class="py-2 transition-colors min-w-6 cursor-pointer border-y border-blue-gray-100 bg-[#EF5831] text-white"
              >
                <p
                  class="items-center justify-between gap-2 antialiased leading-4 font-inter p-[10px] font-bold text-white text-[15px]"
                >
                  Pool Interaction
                </p>
              </th>
              <th
                class="py-2 transition-colors cursor-pointer border-y border-blue-gray-100 bg-[#EF5831] text-white"
              >
                <p
                  class="items-center justify-between gap-2 antialiased leading-4 font-inter p-[10px] font-bold text-white text-[15px]"
                >
                  Before
                </p>
              </th>
              <th
                class="py-2 transition-colors cursor-pointer border-y border-blue-gray-100 bg-[#EF5831] text-white"
              >
                <p
                  class="items-center justify-between gap-2 antialiased leading-4 font-inter p-[10px] font-bold text-white text-[15px]"
                >
                  After
                </p>
              </th>
            </tr>
          </thead>
          <tbody id="tbodyPool">
            <tr>
              <td class="min-w-[100px] px-4 py-2 text-sm leading-4">
                <div
                  class="bg-[#F25C05] text-white font-inter font-normal rounded-md px-4 py-2"
                  id="sellToken"
                >
                  +100 Token
                </div>
              </td>
              <td>
                <input
                  id="beforeToken"
                  value="100"
                  class="border-[#EF5831] border-2 rounded-md outline-none max-w-20 px-4 py-2 text-center text-sm leading-4"
                />
              </td>
              <td id="afterToken" class="px-4 py-2 text-sm leading-4"
                >600 TOKEN</td
              >
            </tr>
            <tr class="pt-2">
              <td class="min-w-[100px] px-4 py-2 text-sm leading-4">
                <div
                  class="bg-[#033298] text-white font-inter font-normal rounded-md px-4 py-2"
                  id="buyWart"
                >
                  +50 Wart
                </div>
              </td>
              <td>
                <input
                  id="beforeWart"
                  value="200"
                  class="border-[#EF5831] border-2 rounded-md outline-none max-w-20 px-4 py-2 text-center text-sm leading-4"
                />
              </td>
              <td id="afterWart" class="px-4 py-2 text-sm leading-4"
                >250 WART</td
              >
            </tr>
            <tr class="pt-2">
              <td class="min-w-[100px] px-4 py-2 text-sm leading-4"
                >[price 2.0]</td
              >
              <td id="beforePrice" class="px-4 py-2 text-sm leading-4"
                >[price 1.667]</td
              >
              <td id="afterPrice" class="px-4 py-2 text-sm leading-4"
                >[price 2.4]</td
              >
            </tr>
          </tbody>
        </table>
      </div>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        let Module: any;
        const initModule = import("../scripts/demo").then((module) => {
          Module = {
            onRuntimeInitialized: () => {
              console.log("runtime initialized");
            },
          };
          module.default(Module);
        });
        function insertRow(obj, rowarr) {
          var row = obj.insertRow(-1);
          row.className = "p-4 h-9";
          for (var i = 0; i < rowarr.length; ++i) {
            var cell = row.insertCell(i); // Create a new cell
            cell.className =
              "px-4 border-b border-blue-gray-50 font-sans text-sm antialiased font-normal leading-normal";
            cell.innerHTML = `${rowarr[i]}`; // Set the innerHTML directly
          }
        }
        function price(base, quote) {
          if (base != 0) {
            return quote / base;
          }
          return "N/A";
        }
        function annotate_parse_errors({ poolToken, poolWart }) {
          document.getElementById("beforeToken").style.backgroundColor =
            poolToken ? "red" : "white";
          document.getElementById("beforeWart").style.backgroundColor = poolWart
            ? "red"
            : "white";
          return !poolToken && !poolWart; // true if both don't have parse errors
        }
        function updateData(res) {
          console.log(res);
          console.log("updateData 1");
          if (res["error"] != null) {
            alert("Error" + res["error"]);
            return;
          }

          if (!annotate_parse_errors(res.parseErrors)) return; // cannot evaluate if there are parse errors
          const match = res.match;
          console.log(match);
          var buys = match.buys;
          var tbodyBuy = document.getElementById("tbodyBuy");
          tbodyBuy.innerHTML = "";
          for (var i = 0, len = buys.length; i < len; i++) {
            insertRow(tbodyBuy, [
              buys[i]["limit"],
              buys[i]["amount"],
              buys[i]["filled"],
            ]);
          }
          console.log("updateData 2");
          var sells = match.sells;
          var tbodySell = document.getElementById("tbodySell");
          tbodySell.innerHTML = "";
          for (var i = 0, len = sells.length; i < len; i++) {
            insertRow(tbodySell, [
              sells[i]["limit"],
              sells[i]["amount"],
              sells[i]["filled"],
            ]);
          }
          var tbodyPool = document.getElementById("tbodyPool");
          document.getElementById("beforePrice").innerHTML =
            match.poolBefore.price;
          document.getElementById("afterToken").innerHTML =
            match.poolAfter.base;
          document.getElementById("afterWart").innerHTML =
            match.poolAfter.quote;
          document.getElementById("afterPrice").innerHTML =
            match.poolAfter.price;

          console.log("updateData 3");

          const toPool = match.toPool;
          const filled = match.filled;

          var tbodyBuyers = document.getElementById("tbodyBuyers");
          tbodyBuyers.innerHTML = "";
          insertRow(tbodyBuyers, [
            "orders",
            match.matched.quote,
            match.matched.base,
            match.matched.price,
          ]);
          if (toPool && toPool.isQuote) {
            insertRow(tbodyBuyers, [
              "via pool",
              toPool.quote,
              toPool.base,
              toPool.price,
            ]);
          }
          insertRow(tbodyBuyers, [
            "total",
            filled.outQuoteBuyer,
            filled.inBaseBuyer,
            match.filled.priceBuyer,
          ]);

          var tbodySellers = document.getElementById("tbodySellers");
          tbodySellers.innerHTML = "";
          insertRow(tbodySellers, [
            "orders",
            match.matched.base,
            match.matched.quote,
            match.matched.price,
          ]);
          if (toPool && !toPool.isQuote) {
            insertRow(tbodySellers, [
              "via pool",
              toPool.base,
              toPool.quote,
              toPool.price,
            ]);
          }
          insertRow(tbodySellers, [
            "total",
            filled.outBaseSeller,
            filled.inQuoteSeller,
            filled.priceSeller,
          ]);
        }
        function addSell() {
          console.log("click add sell");
          var str = JSON.stringify({
            price: (document.getElementById("sellPrice") as HTMLInputElement)
              .value,
            amount: (document.getElementById("tokenAmount") as HTMLInputElement)
              .value,
          });

          console.log("add Sell 1");
          var res = JSON.parse(
            Module.ccall("addSell", "string", ["string"], [str])
          );
          console.log("add Sell 2");
          updateData(res);
        }
        function addBuy() {
          console.log("click add buy");
          var str = JSON.stringify({
            price: (document.getElementById("buyPrice") as HTMLInputElement)
              .value,
            amount: (document.getElementById("wartAmount") as HTMLInputElement)
              .value,
          });
          var res = JSON.parse(
            Module.ccall("addBuy", "string", ["string"], [str])
          );
          updateData(res);
        }
        function editPool() {
          console.log("Edit Pool Function");
          var str = JSON.stringify({
            token: (document.getElementById("beforeToken") as HTMLInputElement)
              .value,
            wart: (document.getElementById("beforeWart") as HTMLInputElement)
              .value,
          });
          console.log(str);
          var res = JSON.parse(
            Module.ccall("editPool", "string", ["string"], [str])
          );
          console.log(res);
          updateData(res);
        }

        // Attach the event listener to the buttons
        document
          .getElementById("sellButton")
          .addEventListener("click", addSell);
        document.getElementById("buyButton").addEventListener("click", addBuy);
        document
          .getElementById("beforeToken")
          .addEventListener("input", editPool);
        document
          .getElementById("beforeWart")
          .addEventListener("input", editPool);
      });
    </script>
  </div>
</BaseLayout>

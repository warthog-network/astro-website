---
import BaseLayout from "../layouts/BaseLayout.astro";
import PriceIcon from "../components/PriceIcon.astro";
import AmountIcon from "../components/AmountIcon.astro";
import SellIcon from "../components/SellIcon.astro";
import BuyTable from "../components/BuyTable.astro";
const title = "DeFi Demo";
import "../styles.css";
---

<BaseLayout title={title}>
  <div class="container mx-auto p-6">
    <!-- <h1 class="text-3xl text-center text-yellow-600 mb-8">DeFi Demo</h1> -->
    <h1
      class="mb-4 text-3xl text-center font-extrabold text-yellow-500 dark:text-white md:text-5xl lg:text-6xl"
    >
      <span
        class="text-transparent bg-clip-text bg-gradient-to-r to-red-600 from-purple-400"
        >DeFi</span
      > Demo
    </h1>

    <div class="flex gap-4">
      <div class="flex flex-col p-6 gap-4 w-[35%]">
        <div
          class="relative flex flex-col w-[100%] h-auto text-gray-700 bg-white shadow-md rounded-xl bg-clip-border"
        >
          <div
            class="relative mx-4 mt-4 overflow-hidden text-gray-700 bg-white rounded-none bg-clip-border"
          >
            <div>
              <div>
                <h5
                  class="block font-sans text-xl antialiased font-semibold leading-snug tracking-normal text-blue-gray-900"
                >
                  Sell Order Book
                </h5>
                <div class="w-full flex gap-1 mt-1">
                  <div class="relative h-10 w-full min-w-[70px]">
                    <div
                      class="absolute grid w-5 h-5 top-2/4 right-3 -translate-y-2/4 place-items-center text-blue-gray-500"
                    >
                      <PriceIcon />
                    </div>
                    <input
                      class="peer h-full w-full rounded-[7px] border border-blue-gray-200 bg-transparent px-3 py-2.5 !pr-9 font-sans text-sm font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 focus:border-2 focus:border-gray-900 focus:border-t-transparent focus:outline-0 disabled:border-0 disabled:bg-blue-gray-50"
                      placeholder=" "
                      id="sellPrice"
                    />
                    <label
                      class="before:content[' '] after:content[' '] pointer-events-none absolute left-0 -top-1.5 flex h-full w-full select-none !overflow-visible truncate text-[11px] font-normal leading-tight text-gray-500 transition-all before:pointer-events-none before:mt-[6.5px] before:mr-1 before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-t before:border-l before:border-blue-gray-200 before:transition-all after:pointer-events-none after:mt-[6.5px] after:ml-1 after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-t after:border-r after:border-blue-gray-200 after:transition-all peer-placeholder-shown:text-sm peer-placeholder-shown:leading-[3.75] peer-placeholder-shown:text-blue-gray-500 peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-gray-900 peer-focus:before:border-t-2 peer-focus:before:border-l-2 peer-focus:before:!border-gray-900 peer-focus:after:border-t-2 peer-focus:after:border-r-2 peer-focus:after:!border-gray-900 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500"
                    >
                      Price
                    </label>
                  </div>
                  <div class="relative h-10 w-full min-w-[70px]">
                    <div
                      class="absolute grid w-5 h-5 top-2/4 right-3 -translate-y-2/4 place-items-center text-blue-gray-500"
                    >
                      <AmountIcon />
                    </div>
                    <input
                      class="peer h-full w-full rounded-[7px] border border-blue-gray-200 bg-transparent px-3 py-2.5 !pr-9 font-sans text-sm font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 focus:border-2 focus:border-gray-900 focus:border-t-transparent focus:outline-0 disabled:border-0 disabled:bg-blue-gray-50"
                      placeholder=" "
                      id="tokenAmount"
                    />
                    <label
                      class="before:content[' '] after:content[' '] pointer-events-none absolute left-0 -top-1.5 flex h-full w-full select-none !overflow-visible truncate text-[11px] font-normal leading-tight text-gray-500 transition-all before:pointer-events-none before:mt-[6.5px] before:mr-1 before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-t before:border-l before:border-blue-gray-200 before:transition-all after:pointer-events-none after:mt-[6.5px] after:ml-1 after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-t after:border-r after:border-blue-gray-200 after:transition-all peer-placeholder-shown:text-sm peer-placeholder-shown:leading-[3.75] peer-placeholder-shown:text-blue-gray-500 peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-gray-900 peer-focus:before:border-t-2 peer-focus:before:border-l-2 peer-focus:before:!border-gray-900 peer-focus:after:border-t-2 peer-focus:after:border-r-2 peer-focus:after:!border-gray-900 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500"
                    >
                      Amount
                    </label>
                  </div>
                  <div class="flex flex-col gap-2 shrink-0 sm:flex-row">
                    <button
                      class="flex select-none items-center gap-3 rounded-lg bg-gray-900 py-2 px-4 text-center align-middle font-sans text-xs font-bold uppercase text-white shadow-md shadow-gray-900/10 transition-all hover:shadow-lg hover:shadow-gray-900/20 focus:opacity-[0.85] focus:shadow-none active:opacity-[0.85] active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none"
                      type="button"
                      id="sellButton"
                    >
                      <SellIcon />
                      SWAP TOKEN
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <div class="p-6 px-0">
            <table class="w-full mt-4 text-left min-w-max bg-red-300">
              <thead>
                <tr>
                  <th
                    class="px-4 py-2 transition-colors cursor-pointer border-y border-blue-gray-100 bg-blue-gray-50/50 hover:bg-blue-gray-50"
                  >
                    <p
                      class="flex items-center justify-between gap-2 font-sans text-sm antialiased font-normal leading-none text-blue-gray-900 opacity-70"
                    >
                      Limit
                    </p>
                  </th>
                  <th
                    class="px-4 py-2 transition-colors cursor-pointer border-y border-blue-gray-100 bg-blue-gray-50/50 hover:bg-blue-gray-50"
                  >
                    <p
                      class="flex items-center justify-between gap-2 font-sans text-sm antialiased font-normal leading-none text-blue-gray-900 opacity-70"
                    >
                      Amount
                    </p>
                  </th>
                  <th
                    class="px-4 py-2 transition-colors cursor-pointer border-y border-blue-gray-100 bg-blue-gray-50/50 hover:bg-blue-gray-50"
                  >
                    <p
                      class="flex items-center justify-between gap-2 font-sans text-sm antialiased font-normal leading-none text-blue-gray-900 opacity-70"
                    >
                      Filled
                    </p>
                  </th>
                </tr>
              </thead>
              <tbody id="tbodySell" class="text-red-700"> </tbody>
            </table>
            <p
              class="px-4 mt-4 flex items-center justify-between gap-2 font-sans text-sm antialiased font-normal leading-none text-green-500 opacity-70"
            >
              Current Price: 0.710025
            </p>
            <BuyTable />
            <div
              class="relative mx-4 mt-4 overflow-hidden text-gray-700 bg-white rounded-none bg-clip-border"
            >
              <div>
                <div>
                  <div class="w-full flex gap-1 mt-5">
                    <div class="relative h-10 w-full min-w-[70px]">
                      <div
                        class="absolute grid w-5 h-5 top-2/4 right-3 -translate-y-2/4 place-items-center text-blue-gray-500"
                      >
                        <PriceIcon />
                      </div>
                      <input
                        class="peer h-full w-full rounded-[7px] border border-blue-gray-200 bg-transparent px-3 py-2.5 !pr-9 font-sans text-sm font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 focus:border-2 focus:border-gray-900 focus:border-t-transparent focus:outline-0 disabled:border-0 disabled:bg-blue-gray-50"
                        placeholder=" "
                        id="buyPrice"
                      />
                      <label
                        class="before:content[' '] after:content[' '] pointer-events-none absolute left-0 -top-1.5 flex h-full w-full select-none !overflow-visible truncate text-[11px] font-normal leading-tight text-gray-500 transition-all before:pointer-events-none before:mt-[6.5px] before:mr-1 before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-t before:border-l before:border-blue-gray-200 before:transition-all after:pointer-events-none after:mt-[6.5px] after:ml-1 after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-t after:border-r after:border-blue-gray-200 after:transition-all peer-placeholder-shown:text-sm peer-placeholder-shown:leading-[3.75] peer-placeholder-shown:text-blue-gray-500 peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-gray-900 peer-focus:before:border-t-2 peer-focus:before:border-l-2 peer-focus:before:!border-gray-900 peer-focus:after:border-t-2 peer-focus:after:border-r-2 peer-focus:after:!border-gray-900 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500"
                      >
                        Price
                      </label>
                    </div>
                    <div class="relative h-10 w-full min-w-[70px]">
                      <div
                        class="absolute grid w-5 h-5 top-2/4 right-3 -translate-y-2/4 place-items-center text-blue-gray-500"
                      >
                        <AmountIcon />
                      </div>
                      <input
                        class="peer h-full w-full rounded-[7px] border border-blue-gray-200 bg-transparent px-3 py-2.5 !pr-9 font-sans text-sm font-normal text-blue-gray-700 outline outline-0 transition-all placeholder-shown:border placeholder-shown:border-blue-gray-200 placeholder-shown:border-t-blue-gray-200 focus:border-2 focus:border-gray-900 focus:border-t-transparent focus:outline-0 disabled:border-0 disabled:bg-blue-gray-50"
                        placeholder=" "
                        id="wartAmount"
                      />
                      <label
                        class="before:content[' '] after:content[' '] pointer-events-none absolute left-0 -top-1.5 flex h-full w-full select-none !overflow-visible truncate text-[11px] font-normal leading-tight text-gray-500 transition-all before:pointer-events-none before:mt-[6.5px] before:mr-1 before:box-border before:block before:h-1.5 before:w-2.5 before:rounded-tl-md before:border-t before:border-l before:border-blue-gray-200 before:transition-all after:pointer-events-none after:mt-[6.5px] after:ml-1 after:box-border after:block after:h-1.5 after:w-2.5 after:flex-grow after:rounded-tr-md after:border-t after:border-r after:border-blue-gray-200 after:transition-all peer-placeholder-shown:text-sm peer-placeholder-shown:leading-[3.75] peer-placeholder-shown:text-blue-gray-500 peer-placeholder-shown:before:border-transparent peer-placeholder-shown:after:border-transparent peer-focus:text-[11px] peer-focus:leading-tight peer-focus:text-gray-900 peer-focus:before:border-t-2 peer-focus:before:border-l-2 peer-focus:before:!border-gray-900 peer-focus:after:border-t-2 peer-focus:after:border-r-2 peer-focus:after:!border-gray-900 peer-disabled:text-transparent peer-disabled:before:border-transparent peer-disabled:after:border-transparent peer-disabled:peer-placeholder-shown:text-blue-gray-500"
                      >
                        Amount
                      </label>
                    </div>
                    <div class="flex flex-col gap-2 shrink-0 sm:flex-row">
                      <button
                        class="flex select-none items-center gap-3 rounded-lg bg-gray-900 py-2 px-4 text-center align-middle font-sans text-xs font-bold uppercase text-white shadow-md shadow-gray-900/10 transition-all hover:shadow-lg hover:shadow-gray-900/20 focus:opacity-[0.85] focus:shadow-none active:opacity-[0.85] active:shadow-none disabled:pointer-events-none disabled:opacity-50 disabled:shadow-none"
                        type="button"
                        id="buyButton"
                      >
                        <SellIcon />
                        SWAP WART
                      </button>
                    </div>
                  </div>
                  <h5
                    class="block font-sans text-xl antialiased font-semibold leading-snug tracking-normal text-blue-gray-900"
                  >
                    Buy Order Book
                  </h5>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="w-[30%] flex flex-col gap-4 bg-yellow-300 h-96">Draw</div>
      <div class="w-[35%] flex flex-col gap-4 bg-yellow-300 h-96">
        <div>
          <h2>Pool:</h2>
          <table>
            <thead>
              <tr>
                <th></th>
                <th>TOKEN</th>
                <th>WART</th>
                <th>PRICE</th>
              </tr>
            </thead>
            <tbody id="tbodyPool">
              <tr>
                <td>before</td>
                <td><input id="beforeToken" value="100" /></td>
                <td><input id="beforeWart" value="200" /></td>
                <td id="beforePrice">N/A</td>
              </tr>
              <tr>
                <td>after</td>
                <td id="afterToken">N/A</td>
                <td id="afterWart">N/A</td>
                <td id="afterPrice">N/A</td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      let Module: any;
      const initModule = import("../scripts/demo").then((module) => {
        Module = {
          onRuntimeInitialized: () => {
            console.log("runtime initialized");
          },
        };
        module.default(Module);
      });
      function insertRow(obj, rowarr) {
        var row = obj.insertRow(-1);
        row.className = "p-4 h-9";
        for (var i = 0; i < rowarr.length; ++i) {
          var cell = row.insertCell(i); // Create a new cell
          cell.className =
            "px-4 border-b border-blue-gray-50 font-sans text-sm antialiased font-normal leading-normal";
          cell.innerHTML = `${rowarr[i]}`; // Set the innerHTML directly
        }
      }
      function price(base, quote) {
        if (base != 0) {
          return quote / base;
        }
        return "N/A";
      }
      function annotate_parse_errors({ poolToken, poolWart }) {
        document.getElementById("beforeToken").style.backgroundColor = poolToken
          ? "red"
          : "white";
        document.getElementById("beforeWart").style.backgroundColor = poolWart
          ? "red"
          : "white";
        return !poolToken && !poolWart; // true if both don't have parse errors
      }
      function updateData(res) {
        console.log(res);
        console.log("updateData 1");
        if (res["error"] != null) {
          alert("Error" + res["error"]);
          return;
        }

        if (!annotate_parse_errors(res.parseErrors)) return; // cannot evaluate if there are parse errors
        const match = res.match;
        console.log(match);
        var buys = match.buys;
        var tbodyBuy = document.getElementById("tbodyBuy");
        tbodyBuy.innerHTML = "";
        for (var i = 0, len = buys.length; i < len; i++) {
          insertRow(tbodyBuy, [
            buys[i]["amount"],
            buys[i]["filled"],
            buys[i]["limit"],
          ]);
        }
        console.log("updateData 2");
        var sells = match.sells;
        var tbodySell = document.getElementById("tbodySell");
        tbodySell.innerHTML = "";
        for (var i = 0, len = sells.length; i < len; i++) {
          insertRow(tbodySell, [
            sells[i]["amount"],
            sells[i]["filled"],
            sells[i]["limit"],
          ]);
        }
        var tbodyPool = document.getElementById("tbodyPool");
        document.getElementById("beforePrice").innerHTML =
          match.poolBefore.price;
        document.getElementById("afterToken").innerHTML = match.poolAfter.base;
        document.getElementById("afterWart").innerHTML = match.poolAfter.quote;
        document.getElementById("afterPrice").innerHTML = match.poolAfter.price;

        console.log("updateData 3");
        // var tbodyBuyers = document.getElementById("tbodyBuyers");
        // tbodyBuyers.innerHTML = "";
        // insertRow(tbodyBuyers, [
        //   "via orders",
        //   match.matched.quote,
        //   match.matched.base,
        //   price(match.matched.base, match.matched.quote),
        // ]);
        // if (match.toPool.isQuote) {
        //   insertRow(tbodyBuyers, [
        //     "via pool",
        //     match.toPool.in,
        //     match.toPool.out,
        //     price(match.toPool.out, match.toPool.in),
        //   ]);
        //   var totalQuote = match.matched.quote + match.toPool.in;
        //   var totalBase = match.matched.base + match.toPool.out;
        //   insertRow(tbodyBuyers, [
        //     "total",
        //     totalQuote,
        //     totalBase,
        //     price(totalBase, totalQuote),
        //   ]);
        // }

        // var tbodySellers = document.getElementById("tbodySellers");
        // tbodySellers.innerHTML = "";
        // insertRow(tbodySellers, [
        //   "orders",
        //   match.matched.base,
        //   match.matched.quote,
        //   price(match.matched.base, match.matched.quote),
        // ]);
        // if (!match.toPool.isQuote) {
        //   insertRow(tbodySellers, [
        //     "via pool",
        //     match.toPool.in,
        //     match.toPool.out,
        //     price(match.toPool.in, match.toPool.out),
        //   ]);
        //   var totalBase = match.matched.base + match.toPool.in;
        //   var totalQuote = match.matched.quote + match.toPool.out;
        //   insertRow(tbodySellers, [
        //     "total",
        //     totalBase,
        //     totalQuote,
        //     price(totalBase, totalQuote),
        //   ]);
        // }
      }
      function addSell() {
        console.log("click add sell");
        var str = JSON.stringify({
          price: (document.getElementById("sellPrice") as HTMLInputElement)
            .value,
          amount: (document.getElementById("tokenAmount") as HTMLInputElement)
            .value,
        });

        console.log("add Sell 1");
        var res = JSON.parse(Module.ccall("addSell","string",["string"],[str]))
        console.log("add Sell 2");
        updateData(res);
      }
      function addBuy() {
        console.log("click add buy");
        var str = JSON.stringify({
          price: (document.getElementById("buyPrice") as HTMLInputElement)
            .value,
          amount: (document.getElementById("wartAmount") as HTMLInputElement)
            .value,
        });
        var res = JSON.parse(
          Module.ccall("addBuy", "string", ["string"], [str])
        );
        updateData(res);
      }
      function editPool() {
        console.log("Edit Pool Function");
        var str = JSON.stringify({
          token: (document.getElementById("beforeToken") as HTMLInputElement)
            .value,
          wart: (document.getElementById("beforeWart") as HTMLInputElement)
            .value,
        });
        console.log(str);
        var res = JSON.parse(
          Module.ccall("editPool", "string", ["string"], [str])
        );
        console.log(res);
        updateData(res);
      }

      // Attach the event listener to the buttons
      document.getElementById("sellButton").addEventListener("click", addSell);
      document.getElementById("buyButton").addEventListener("click", addBuy);
      document
        .getElementById("beforeToken")
        .addEventListener("input", editPool);
      document.getElementById("beforeWart").addEventListener("input", editPool);

    });
  </script>
</BaseLayout>
